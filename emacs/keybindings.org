#+title: Emacs — Keybindings
#+setupfile: ../headers
#+property: header-args:emacs-lisp  :mkdirp yes :lexical t :exports code
#+property: header-args:emacs-lisp+ :tangle ~/.config/emacs/lisp/keybindings.el
#+property: header-args:emacs-lisp+ :mkdirp yes :noweb no-export
#+property: header-args :eval yes

* Keybindings
Undefining some stuff to make keybind prefixes work correctly.

#+name: general-keybindings-gen
#+header: :tangle no :exports none :results value :cache yes
#+begin_src emacs-lisp :var table=keybinds-windows prefix=""
(mapconcat (lambda (line)
             (let* ((key      (nth 0 line))
                    (function (nth 1 line))
                    (comment  (or (nth 2 line) ""))
                    (package  (or (nth 3 line) "")))
               (format "\"%s%s\" %s"
                       prefix
                       key
                       (if (string= "" comment)
                           (if (member function '("" "nil")) "nil" (concat "#'" function))
                         (format "'(%s :wk %s%s)"
                                 (if (member function '("" "nil")) ":ignore t" function)
                                 (if (member function '("none" "nil")) "t" (concat "\"" comment "\""))
                                 (if (string-blank-p package) "" (concat ":package " package)))))))
           table
           "\n")
#+end_src

#+begin_src emacs-lisp
(general-define-key
 :keymaps 'global-map
 "<mouse-2>" nil
 "<mouse-3>" nil)

(phundrak/evil
  :packages '(counsel)
  "U"   #'evil-redo
  "C-a" #'beginning-of-line
  "C-e" #'end-of-line
  "C-i" #'evil-jump-forward
  "C-y" #'yank
  "M-y" #'counsel-yank-pop)
#+end_src

#+RESULTS:

#+begin_src emacs-lisp
(general-define-key
 "<f5>" #'compile
 "<f6>" #'recompile)

(phundrak/leader-key
  "SPC" '(counsel-M-x :wk "M-x")
  "'"   #'shell-pop

  <<general-keybindings-gen(table=keybinds-tabs, prefix="TAB ")>>

  <<general-keybindings-gen(table=keybinds-apps, prefix="a")>>
  <<general-keybindings-gen(table=keybinds-apps-shell, prefix="as")>>
  <<general-keybindings-gen(table=treemacs-keybinds, prefix="at")>>

  <<general-keybindings-gen(table=keybinds-buffers, prefix="b")>>

  "c"   '(:ignore t :wk "code")
  "cl"  #'evilnc-comment-or-uncomment-lines

  <<keybindings-flycheck>>

  <<general-keybindings-gen(table=keybinds-files, prefix="f")>>
  <<keybinds-specific-files>>

  <<general-keybindings-gen(table=keybinds-help, prefix="h")>>
  <<general-keybindings-gen(table=keybinds-inserts, prefix="i")>>

  "i"   '(:ignore t :wk "insert")
  "iu"  #'counsel-unicode-char

  <<general-keybindings-gen(table=keybinds-jump, prefix="j")>>
  <<general-keybindings-gen(table=keybinds-lookup, prefix="l")>>

  <<general-keybindings-gen(table=keybinds-toggle, prefix="t ")>>

  <<general-keybindings-gen(table=keybinds-text, prefix="T")>>
  <<general-keybindings-gen(table=keybinds-project, prefix="p")>>

  <<general-keybindings-gen(table=keybinds-windows, prefix="w")>>

  <<general-keybindings-gen(table=keybinds-open, prefix="o")>>
  <<general-keybindings-gen(table=keybinds-quit, prefix="q")>>
  <<general-keybindings-gen(table=keybinds-searches, prefix="s")>>
  <<general-keybindings-gen(table=keybinds-hydras, prefix="x")>>

  "u"   #'universal-argument
  "U"   #'undo-tree-visualize)
#+end_src

#+RESULTS:

Now some keybindings for the ~Super_L~ key: 

#+begin_src emacs-lisp
;; lower case “s” is for super
;; Use windows key (super) for window navigation 
(global-set-key (kbd "s-h") #'evil-window-left)
(global-set-key (kbd "s-l") #'evil-window-right)
(global-set-key (kbd "s-k") #'evil-window-up)
(global-set-key (kbd "s-j") #'evil-window-down)

;; perspective
(global-set-key (kbd "s-,") #'persp-prev)
(global-set-key (kbd "s-.") #'persp-next)

;; buffers
(global-set-key (kbd "s-b") #'consult-buffer)
#+end_src

Some keybindings for *paragraphs*:

#+begin_src emacs-lisp
(global-set-key (kbd "M-n") #'forward-paragraph)
(global-set-key (kbd "M-p") #'backward-paragraph)
#+end_src

** Apps
Here are my apps keybinds. Each one of them is prefixed by ~a~.
#+name: keybinds-apps
| Key | Function         | Description | Package    |
|-----+------------------+-------------+------------|
|     |                  | apps        |            |
| c   | calc             |             |            |
| cs  | chatgpt-shell    |             |            |
| C   |                  | calendar    |            |
| CC  | calendar         |             |            |
| Co  | org-agenda       |             | org        |
| Cs  | org-caldav-sync  |             | org-caldav |
| d   | docker           |             |            |
| E   | elfeed           |             |            |
| e   |                  | email       |            |
| ec  | mu4e-compose-new |             |            |
| em  | mu4e             |             |            |
| k   | keycast-mode     |             |            |
| K   | keycast-log-mode |             |            |
| T   | tetris           |             |            |
| w   | wttrin           |             | wttrin     |

I also have two main shell-related functions, prefixed with ~as~.
#+name: keybinds-apps-shell
| Key | Function    | Description | Package     |
|-----+-------------+-------------+-------------|
|     |             | shells      |             |
| e   | eshell-new  |             |             |
| v   | vterm       |             | vterm       |
| V   | multi-vterm |             | multi-vterm |

** Autocompletion
Replace ~dabbrev-expand~ with ~hippie-expand~:

#+begin_src emacs-lisp
(global-set-key [remap dabbrev-expand] 'hippie-expand)
#+end_src
** Buffers
My buffer-related keybinds are all prefixed by ~b~.
#+name: keybinds-buffers
| Key | Function                           | Description |
|-----+------------------------------------+-------------|
|     |                                    | buffers     |
| b   | bufler-switch-buffer               |             |
| B   | bury-buffer                        |             |
| c   | clone-indirect-buffer              |             |
| C   | clone-indirect-buffer-other-window |             |
| l   | bufler                             |             |
| i   | ibuffer                            |             |
| d   | kill-this-buffer                   |             |
| D   | kill-buffer                        |             |
| h   | dashboard-refresh-buffer           |             |
| m   | switch-to-messages-buffer          |             |
| n   | next-buffer                        |             |
| p   | previous-buffer                    |             |
| r   | counsel-buffer-or-recentf          |             |
| s   | switch-to-scratch-buffer           |             |

** Errors
#+begin_src emacs-lisp
(defhydra hydra-flycheck
  (:pre (flycheck-list-errors)
   :post (quit-windows-on "*Flycheck errors*")
   :hint nil)
  ("f" flycheck-error-list-set-filter "Filter")
  ("t" flycheck-next-error "Next")
  ("s" flycheck-previous-error "Previous")
  ("gg" flycheck-first-error "First")
  ("G" (progn (goto-char (point-max)) (flycheck-previous-error)) "Last")
  ("q" nil))
#+end_src

#+name: keybindings-flycheck
#+begin_src emacs-lisp :tangle no
"e"  '(:ignore t :which-key "errors")
"e." '(hydra-flycheck/body :wk "hydra")
"el" #'counsel-flycheck
"ee" '(:keymap flycheck-command-map :package 'flycheck :wk "flycheck")
"ef" '(:keymap flyspell-mode-map :package 'flyspell :wk "flyspell")
"eF" #'flyspell-hydra/body
#+end_src

** Files
My keybinds for file manipulation are prefixed by ~f~.
#+name: keybinds-files
| Key | Function          | Description |
|-----+-------------------+-------------|
|     |                   | files       |
| .   | find-file         |             |
| f   | counsel-find-file |             |
| F   | quick-find-files  |             |
| h   | hexl-find-file    |             |
| r   | counsel-recentf   |             |
| R   | rename-file       |             |
| s   | save-buffer       |             |

I also have some keybinds dedicated to opening specific files.
#+name: keybinds-specific-files
#+begin_src emacs-lisp :tangle no
"fc"  '((lambda ()
          (interactive)
          (quick-find-files nil "~/org/config/docs/emacs" "org"))
        :wk "emacs config")
"fC"  '((lambda ()
          (interactive)
          (quick-find-files nil "~/org/config/docs" "org"))
        :wk "general config")
"fi"  '((lambda ()
          (interactive)
          (find-file (concat user-emacs-directory "init.el")))
        :which-key "init.el")
"fI"  '((lambda ()
          (interactive)
          (quick-find-files nil
                            (expand-file-name "lisp" user-emacs-directory)
                            "el"))
        :which-key "elisp config")
"fR"  '((lambda ()
          (interactive)
          (counsel-find-file ""
                             (concat user-emacs-directory
                                    (file-name-as-directory "straight")
                                    (file-name-as-directory "repos"))))
        :which-key "straight package")
"fS"  '((lambda ()
          (interactive)
          (find-file "~/org/config/stumpwm.org"))
        :which-key "stumpwm.org")
#+end_src
** Inserts
My keybinds for inserts are prefixed by ~i~.
#+name: keybinds-inserts
| Key | Function          | Description |
|-----+-------------------+-------------|
|     |                   | inserts     |
| y   | consult-yasnippet |             |
| f   | company-files     |             |
| d   | company-dabbrev   |             |

** Searches
My keybinds for searches are prefixed by ~s~.
#+name: keybinds-searches
| Key | Function                          | Description                  |
|-----+-----------------------------------+------------------------------|
| q   | swiper                            |                              |
| .   | swiper-thing-at-point             |                              |
| a   | swiper-all                        |                              |
| A   | swiper-all-thing-at-point         |                              |
| rd  | my/rg-dotemacs                    | Seach in dotemacs repo       |
| rh  | my/rg-org-roam-directory-huberman | Search in huberman directory |
| ro  | my/rg-org-roam-directory          | Search in org-roam DB        |

** Help
My keybinds for help are prefixed by ~h~.
#+name: keybinds-help
| Key | Function                  | Description |
|-----+---------------------------+-------------|
|     |                           | help        |
| k   | which-key-show-top-level  |             |
| i   | info                      |             |
| I   | info-display-manual       |             |
| d   |                           | describe    |
| d.  | describe-keymap           |             |
| db  | describe-bindings         |             |
| dc  | describe-char             |             |
| dC  | helpful-command           |             |
| df  | helpful-callable          |             |
| di  | describe-input-method     |             |
| dk  | helpful-key               |             |
| dm  | helpful-macro             |             |
| dM  | helpful-mode              |             |
| dp  | describe-package          |             |
| ds  | helpful-symbol            |             |
| dv  | helpful-variable          |             |
| f   | describe-face             |             |
| wk  | which-key-show-keymap     |             |
| wm  | which-key-show-major-mode |             |

** Lookup
Keybindings for looking up things (prefixed by ~l~).
#+name: keybinds-lookup
| Key | Function                         | Description |
|-----+----------------------------------+-------------|
|     |                                  | lookup      |
| d   | dictcc                           |             |
| l   | leo-translate-word               |             |
| w   | wordreference-search             |             |
| g   | google-translate-query-translate |             |

** Jump
My keybinds for jumping around are prefixed by ~j~.
#+name: keybinds-jump
| Key | Function                | Description |
|-----+-------------------------+-------------|
|     |                         | jump        |
| f   | counsel-file-jump       |             |
| d   | dirvish-dwim            |             |
| D   | dired-jump-other-window |             |
| j   | persp-switch-last       |             |
| w   | ace-window              |             |
** Open stuff
Keybindings for ~opening~ stuff (prefixed by ~o~)

#+name: keybinds-open
| Key | Function                      | Description |
|-----+-------------------------------+-------------|
|     |                               | open        |
| c   | org-capture                   |             |
| ll  | link-hint-open-link           |             |
| lc  | link-hint-copy-link           |             |
| lm  | link-hint-open-multiple-links |             |

** Project
My keybinds for my projects are prefixed by ~p~.
#+name: keybinds-project
| Key | Function                                   | Description   |
|-----+--------------------------------------------+---------------|
|     |                                            | project       |
| .   | rg-project                                 |               |
| !   | projectile-run-shell-command-in-root       |               |
| &   | projectile-run-async-shell-command-in-root |               |
| a   | projectile-add-known-project               |               |
| b   | consult-project-buffer                     |               |
| c   | counsel-projectile                         |               |
| d   | consult-projectile-find-dir                |               |
| e   | projectile-edit-dir-locals                 |               |
| f   | projectile--find-file                      |               |
| g   | projectile-find-tag                        |               |
| k   | project-kill-buffers                       |               |
| p   | consult-projectile-switch-project          |               |
| S   | dirvish-side                               |               |
| T   | treemacs                                   | Open treemacs |
| t   | ivy-magit-todos                            |               |
| v   | projectile-vc                              |               |

*** Treemacs

#+name: treemacs-keybinds
| Key | Function                               | Description |
|-----+----------------------------------------+-------------|
|     |                                        | treemacs    |
| c   |                                        | create      |
| cd  | treemacs-create-dir                    |             |
| cf  | treemacs-create-file                   |             |
| ci  | treemacs-create-icon                   |             |
| ct  | treemacs-create-theme                  |             |
| cw  | treemacs-create-workspace              |             |
| d   | treemacs-delete-file                   |             |
| f   |                                        | files       |
| ff  | treemacs-find-file                     |             |
| ft  | treemacs-find-tag                      |             |
| l   |                                        | lsp         |
| ls  | treemacs-expand-lsp-symbol             |             |
| ld  | treemacs-expand-lsp-treemacs-deps      |             |
| lD  | treemacs-collapse-lsp-treemacs-deps    |             |
| lS  | treemacs-collapse-lsp-symbol           |             |
| p   |                                        | projects    |
| pa  | treemacs-add-project-to-workspace      |             |
| pf  | treemacs-project-follow-mode           |             |
| pn  | treemacs-project-of-node               |             |
| pp  | treemacs-project-at-point              |             |
| pr  | treemacs-remove-project-from-workspace |             |
| pt  | treemacs-move-project-down             |             |
| ps  | treemacs-move-project-up               |             |
| r   |                                        | rename      |
| rf  | treemacs-rename-file                   |             |
| rp  | treemacs-rename-project                |             |
| rr  | treemacs-rename                        |             |
| rw  | treemacs-rename-workspace              |             |
| t   | treemacs                               |             |
| T   |                                        | toggles     |
| Td  | treemacs-toggle-show-dotfiles          |             |
| Tn  | treemacs-toggle-node                   |             |
| v   |                                        | visit node  |
| va  | treemacs-visit-node-ace                |             |
| vc  | treemacs-visit-node-close-treemacs     |             |
| vn  | treemacs-visit-node-default            |             |
| y   |                                        | yank        |
| ya  | treemacs-copy-absolute-path-at-point   |             |
| yp  | treemacs-copy-project-path-at-point    |             |
| yr  | treemacs-copy-relative-path-at-point   |             |
| yf  | treemacs-copy-file                     |             |

** Tabs
Emacs has native tabs available, which can be interesting when working
on multiple projects at once between which we may want to switch. Tabs
allow the user not to have multiple frames while keeping the
advantages of having multiple frames.

My keybinds are prefixed by ~SPC TAB~.
#+name: keybinds-tabs
| Key | Function                     | Description |
|-----+------------------------------+-------------|
|     |                              | tabs        |
| TAB | tab-switch                   |             |
| »   | tab-next                     |             |
| «   | tab-previous                 |             |
| c   | centaur-tabs--create-new-tab |             |
| C   | tab-new-to                   |             |
| d   | tab-close                    |             |
| j   | centaur-tabs-ace-jump        |             |
| n   | centaur-tabs-forward         |             |
| p   | centaur-tabs-backward        |             |
| r   | tab-rename                   |             |

** Text
The prefix here is ~T~.
#+name: keybinds-text
| Key | Function             | Description |
|-----+----------------------+-------------|
|     |                      | text        |
| e   | string-edit-at-point |             |
| u   | downcase-region      |             |
| U   | upcase-region        |             |
| z   | hydra-zoom/body      |             |

** Toggles
My toggle keybinds are prefixed by ~t~.
#+name: keybinds-toggle
| Key | Function                     | Description         |
|-----+------------------------------+---------------------|
|     |                              | toggles             |
| TAB | centaur-tabs-mode            |                     |
| t   | dorneanu/toggle-transparency |                     |
| T   | consult-theme                |                     |
| d   |                              | debug               |
| de  | toggle-debug-on-error        |                     |
| dq  | toggle-debug-on-quit         |                     |
| dhl | diff-hl-mode                 |                     |
| dgg | git-gutter-mode              |                     |
| f   | focus-mode                   | focus-mode          |
| h   | highlight-indent-guides-mode |                     |
| i   |                              | input method        |
| it  | toggle-input-method          |                     |
| is  | set-input-method             |                     |
| ln  | display-line-numbers-mode    | Toggle line numbers |
| lh  | hl-line-mode                 |                     |
| om  | olivetti-mode                | olivetti mode       |
| os  | org-sidebar-tree-toggle      |                     |
| vc  | visual-fill-column-mode      |                     |
| vp  | vertico-posframe-mode        |                     |

** Windows
A couple of keybinds are hidden from which-key, otherwise there’s not
much to say. The prefix here is ~w~.
#+name: keybinds-windows
| Key | Function                      | Description |   |
|-----+-------------------------------+-------------+---|
|     |                               | windows     |   |
| h   | evil-window-left              |             |   |
| j   | evil-window-down              |             |   |
| k   | evil-window-up                |             |   |
| l   | evil-window-right             |             |   |
| .   | +hydra/window-nav/body        |             |   |
| -   | split-window-below-and-focus  |             |   |
| ,   | dorneanu/toggle-window-split  |             |   |
| /   | split-window-right-and-focus  |             |   |
| $   | winum-select-window-by-number |             |   |
| =   | balance-windows               |             |   |
| 0   | winum-select-window-0-or-10   | none        |   |
| 1   | winum-select-window-1         | none        |   |
| 2   | winum-select-window-2         | none        |   |
| 3   | winum-select-window-3         | none        |   |
| 4   | winum-select-window-4         | none        |   |
| 5   | winum-select-window-5         | none        |   |
| 6   | winum-select-window-6         | none        |   |
| 7   | winum-select-window-7         | none        |   |
| 8   | winum-select-window-8         | none        |   |
| 9   | winum-select-window-9         | none        |   |
| b   | kill-buffer-and-delete-window |             |   |
| d   | delete-window                 |             |   |
| o   | other-window                  |             |   |
| D   | delete-other-windows          |             |   |
| m   | maximize-window               |             |   |
| w   |                               | writeroom   |   |
| w.  | writeroom-buffer-width/body   |             |   |
| ww  | writeroom-mode                |             |   |
| u   | winner-undo                   |             |   |
| r   | winner-redo                   |             |   |
** Hydras

#+name: keybinds-hydras
| Key | Function                            | Description |   |
|-----+-------------------------------------+-------------+---|
|     |                                     | hydras      |   |
| oj  | sk/hydra-org-jump/body              |             |   |
| ob  | org-babel-transient/body            |             |   |
| F   | flyspell-hydra/body                 |             |   |
| fb  | default-font-presets-backward       |             |   |
| ff  | default-font-presets-forward        |             |   |
| fc  | default-font-presets-choose         |             |   |
| f+  | default-font-presets-scale-increase |             |   |
| f-  | default-font-presets-scale-decrease |             |   |
| fs  | dorneanu/set-font-size              |             |   |
| m   | hydra-modeline/body                 |             |   |
| w   | +hydra/window-nav/body              |             |   |
| W   | hydra-windows/body                  |             |   |
| u   | dakra/hydra-unicode/body            |             |   |

** Quit
Why would I ever use any of these keybinds? They are prefixed with ~q~.
#+name: keybinds-quit
| Key | Function                   | Description |
|-----+----------------------------+-------------|
|     |                            | quit        |
| f   | delete-frame               |             |
| r   | restart-emacs              |             |
| q   | save-buffers-kill-terminal |             |
| Q   | kill-emacs                 |             |
